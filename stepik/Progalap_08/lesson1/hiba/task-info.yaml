type: edu
files:
- name: CMakeLists.txt
  visible: false
  text: |-
    cmake_minimum_required(VERSION 3.20)

    project(global-lesson1-jegyek)

    set(CMAKE_CXX_STANDARD 14)

    # Files from `./src` directory
    set(SRC
            src/hiba.c)

    # Files from `./test` directory
    set(TEST
            test/test.cpp)


    # Running learner side code
    # Use PROJECT_NAME dependent names of targets for the plugin support to work correctly.
    add_executable(${PROJECT_NAME}-run ${SRC})

    # Running tests
    # Use PROJECT_NAME dependent names of targets for the plugin support to work correctly.
    configure_test_target(${PROJECT_NAME}-test ${SRC} ${TEST})
  learner_created: false
- name: test/test.cpp
  visible: false
  text: |
    #include <gtest/gtest.h>
    #include <string>

    using namespace std;

    #define main main_0
    #include "../src/hiba.c"
    #undef main

    TEST(Teszt, 01) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        int meret = 10;

        int* tomb = letrehoz(meret);
        for (int i = 0; i < meret; i++) {
            tomb[i] = 0;
        }

        free(tomb);
    }

    TEST(Teszt, 02) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        int meret = 1;

        int* tomb = letrehoz(meret);
        for (int i = 0; i < meret; i++) {
            tomb[i] = 0;
        }

        free(tomb);
    }

    TEST(Teszt, 03) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        int meret = 100;

        int* tomb = letrehoz(meret);
        for (int i = 0; i < meret; i++) {
            tomb[i] = 0;
        }

        free(tomb);
    }

    TEST(Teszt, 04) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        int meret = 5000;

        int* tomb = letrehoz(meret);
        for (int i = 0; i < meret; i++) {
            tomb[i] = 0;
        }

        free(tomb);
    }

    TEST(Teszt, 05) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        int meret = 1000000;

        int* tomb = letrehoz(meret);
        for (int i = 0; i < meret; i++) {
            tomb[i] = 0;
        }

        free(tomb);
    }
  learner_created: false
- name: src/hiba.c
  visible: true
  placeholders:
  - offset: 21
    length: 75
    placeholder_text: |-
      int* letrehoz(int meret) {
          return (int*) malloc(meret * sizeof(int));
      }
    initial_state:
      length: 75
      offset: 0
    initialized_from_dependency: false
    selected: true
    status: Unchecked
    encrypted_possible_answer: |-
      #include <stdlib.h>

      int* letrehoz(int meret) {
          return (int*) malloc(meret * sizeof(int));
      }
  text: |-
    int* letrehoz(int meret) {
        return (int*) malloc(meret * sizeof(int));
    }
  learner_created: false
status: Solved
feedback:
  message: Congratulations!
  time: "Fri, 24 Nov 2023 17:17:35 UTC"
record: -1
solution_hidden: true
