type: edu
files:
- name: CMakeLists.txt
  visible: false
  text: |-
    cmake_minimum_required(VERSION 3.20)

    project(global-lesson1-szeleteles)

    set(CMAKE_CXX_STANDARD 14)

    # Files from `./src` directory
    set(SRC
            src/parti.c)

    # Files from `./test` directory
    set(TEST
            test/test.cpp)


    # Running learner side code
    # Use PROJECT_NAME dependent names of targets for the plugin support to work correctly.
    add_executable(${PROJECT_NAME}-run ${SRC})

    # Running tests
    # Use PROJECT_NAME dependent names of targets for the plugin support to work correctly.
    configure_test_target(${PROJECT_NAME}-test ${SRC} ${TEST})
  learner_created: false
- name: src/parti.c
  visible: true
  placeholders:
  - offset: 0
    length: 161
    placeholder_text: |-
      int eloszthato(int szeletekSzama, int emberek) {
          if (szeletekSzama % emberek == 0 && emberek != 0) {
              return szeletekSzama / emberek;
          }

          return -1;
      }
    initial_state:
      length: 168
      offset: 0
    initialized_from_dependency: false
    selected: true
    status: Unchecked
    encrypted_possible_answer: |-
      int eloszthato(int szeletekSzama, int emberek) {
          if (emberek != 0 && szeletekSzama % emberek == 0) {
              return 1;
          }

          return 0;
      }
  text: |-
    int eloszthato(int szeletekSzama, int emberek) {
        if (szeletekSzama % emberek == 0 && emberek != 0) {
            return szeletekSzama / emberek;
        }

        return -1;
    }
  learner_created: false
- name: test/test.cpp
  visible: false
  text: |
    #include <gtest/gtest.h>

    #define main main_0
    #include "../src/parti.c"
    #undef main

    #include "../../tools.cpp"

    TEST(Teszt, 01) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        ASSERT_EQ(eloszthato(7, 7), 1);
    }

    TEST(Teszt, 02) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        ASSERT_EQ(eloszthato(8, 4), 1);
    }

    TEST(Teszt, 03) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        ASSERT_EQ(eloszthato(8, 7), 0);
    }

    TEST(Teszt, 04) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        ASSERT_EQ(eloszthato(9, 3), 1);
    }

    TEST(Teszt, 05) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        ASSERT_EQ(eloszthato(12, 5), 0);
    }

    TEST(Teszt, 06) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        ASSERT_EQ(eloszthato(18, 6), 1);
    }

    TEST(Teszt, 07) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        ASSERT_EQ(eloszthato(18, 2), 1);
    }

    TEST(Teszt, 08) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        ASSERT_EQ(eloszthato(33, 2), 0);
    }

    TEST(Teszt, 09) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        ASSERT_EQ(eloszthato(40, -2), 1);
    }

    TEST(Teszt, 10) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        ASSERT_EQ(eloszthato(5, -4), 0);
    }

    TEST(Teszt, 11) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        ASSERT_EQ(eloszthato(7, 0), 0);
    }

    TEST(Teszt, 12) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        ASSERT_EQ(eloszthato(0, 0), 0);
    }
  learner_created: false
status: Solved
record: -1
solution_hidden: true
