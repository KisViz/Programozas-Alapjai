type: edu
files:
- name: CMakeLists.txt
  visible: false
  text: |-
    cmake_minimum_required(VERSION 3.16)

    project(global-lesson1-negyzet)

    set(CMAKE_CXX_STANDARD 14)

    # Files from `./src` directory
    set(SRC
            src/negyzet.c)

    # Files from `./test` directory
    set(TEST
            test/test.cpp)


    # Running learner side code
    # Use PROJECT_NAME dependent names of targets for the plugin support to work correctly.
    add_executable(${PROJECT_NAME}-run ${SRC})

    # Running tests
    # Use PROJECT_NAME dependent names of targets for the plugin support to work correctly.
    configure_test_target(${PROJECT_NAME}-test ${SRC} ${TEST})
  learner_created: false
- name: src/negyzet.c
  visible: true
  placeholders:
  - offset: 0
    length: 118
    placeholder_text: // megoldas
    initial_state:
      length: 11
      offset: 0
    initialized_from_dependency: false
    selected: true
    status: Unchecked
    encrypted_possible_answer: |-
      void negyzetesit(int szamok[], int db) {
          for (int i = 0; i < db; i++) {
              szamok[i] *= szamok[i];
          }
      }
  text: // megoldas
  learner_created: false
- name: test/test.cpp
  visible: false
  text: |
    #include <gtest/gtest.h>

    #define main main_0
    #include "../src/negyzet.c"
    #undef main

    #include "../../tools.cpp"

    TEST(Teszt, 01) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        int t[] = {3, 5, 2};
        int res[] = {9, 25, 4};
        int len = 3;

        negyzetesit(t, len);
        ASSERT_ARRAY_EQ(t, res, len);
    }

    TEST(Teszt, 02) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        int t[] = {10, 44, 21, 0, -3, 44, -1};
        int res[] = {100, 1936, 441, 0, 9, 1936, 1};
        int len = 7;

        negyzetesit(t, len);
        ASSERT_ARRAY_EQ(t, res, len);
    }

    TEST(Teszt, 03) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        int t[] = {0};
        int res[] = {0};
        int len = 1;

        negyzetesit(t, len);
        ASSERT_ARRAY_EQ(t, res, len);
    }

    TEST(Teszt, 04) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        int t[] = {-2, -2, -5, -8, -11, 0, -2, 4};
        int res[] = {4, 4, 25, 64, 121, 0, 4, 16};
        int len = 8;

        negyzetesit(t, len);
        ASSERT_ARRAY_EQ(t, res, len);
    }

    TEST(Teszt, 05) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        int t[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -1, 4};
        int res[] = {1, 4, 9, 16, 25, 36, 49, 64, 81, 100, 121, 144, 169, 196, 225, 256, 289, 324, 361, 400, 1, 16};
        int len = 22;

        negyzetesit(t, len);
        ASSERT_ARRAY_EQ(t, res, len);
    }
  learner_created: false
status: Solved
feedback:
  message: Congratulations!
  time: "Wed, 04 Oct 2023 14:58:10 UTC"
record: -1
solution_hidden: true
