type: edu
files:
- name: CMakeLists.txt
  visible: false
  text: |-
    cmake_minimum_required(VERSION 3.16)

    project(global-lesson1-vasar)

    set(CMAKE_CXX_STANDARD 14)

    # Files from `./src` directory
    set(SRC
            src/vasar.c)

    # Files from `./test` directory
    set(TEST
            test/test.cpp)


    # Running learner side code
    # Use PROJECT_NAME dependent names of targets for the plugin support to work correctly.
    add_executable(${PROJECT_NAME}-run ${SRC})

    # Running tests
    # Use PROJECT_NAME dependent names of targets for the plugin support to work correctly.
    configure_test_target(${PROJECT_NAME}-test ${SRC} ${TEST})
  learner_created: false
- name: src/vasar.c
  visible: true
  placeholders:
  - offset: 141
    length: 32
    placeholder_text: ;;
    initial_state:
      length: 2
      offset: 141
    initialized_from_dependency: false
    selected: true
    status: Unchecked
    encrypted_possible_answer: int i = 0; i < mennyiseg; i++
  text: |-
    #include <stdio.h>

    int main() {
        int mennyiseg;
        printf("Mennyi szenat tegyek a bagyujaba? ");
        scanf("%d", &mennyiseg);

        for (;;) {
            printf("Betettem\n");
        }

        return 0;
    }
  learner_created: false
- name: test/test.cpp
  visible: false
  text: |-
    #include <gtest/gtest.h>

    #define main main_0
    #include "../src/vasar.c"
    #undef main

    #include "../../tools.cpp"

    TEST(Teszt, 01) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        char str[2000];
        IO("1", main_0(), str);
        ASSERT_STREQ(str, "Mennyi szenat tegyek a bagyujaba? Betettem\n");
    }

    TEST(Teszt, 02) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        char str[2000];
        IO("5", main_0(), str);
        ASSERT_STREQ(str, "Mennyi szenat tegyek a bagyujaba? Betettem\nBetettem\nBetettem\nBetettem\nBetettem\n");
    }

    TEST(Teszt, 03) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        char str[2000];
        IO("11", main_0(), str);
        ASSERT_STREQ(str, "Mennyi szenat tegyek a bagyujaba? Betettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\n");
    }

    TEST(Teszt, 04) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        char str[2000];
        IO("25", main_0(), str);
        ASSERT_STREQ(str, "Mennyi szenat tegyek a bagyujaba? Betettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\n");
    }

    TEST(Teszt, 05) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        char str[2000];
        IO("0", main_0(), str);
        ASSERT_STREQ(str, "Mennyi szenat tegyek a bagyujaba? ");
    }

    TEST(Teszt, 06) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        char str[2000];
        IO("87", main_0(), str);
        ASSERT_STREQ(str, "Mennyi szenat tegyek a bagyujaba? Betettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\nBetettem\n");
    }
  learner_created: false
status: Solved
feedback:
  message: Congratulations!
  time: "Wed, 27 Sep 2023 17:56:51 UTC"
record: -1
solution_hidden: true
