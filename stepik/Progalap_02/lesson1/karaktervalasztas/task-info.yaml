type: edu
files:
- name: CMakeLists.txt
  visible: false
  text: |-
    cmake_minimum_required(VERSION 3.16)

    project(global-lesson1-karaktervalasztas)

    set(CMAKE_CXX_STANDARD 14)

    # Files from `./src` directory
    set(SRC
            src/karaktervalasztas.c)

    # Files from `./test` directory
    set(TEST
            test/test.cpp)


    # Running learner side code
    # Use PROJECT_NAME dependent names of targets for the plugin support to work correctly.
    add_executable(${PROJECT_NAME}-run ${SRC})

    # Running tests
    # Use PROJECT_NAME dependent names of targets for the plugin support to work correctly.
    configure_test_target(${PROJECT_NAME}-test ${SRC} ${TEST})
  learner_created: false
- name: test/test.cpp
  visible: false
  text: |-
    #include <gtest/gtest.h>

    #define main main_0
    #include "../src/karaktervalasztas.c"
    #undef main

    #include "../../tools.cpp"

    TEST(Kiirt_ertek, 01) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        char str[150];
        IO("1", fajvalasztas(), str)
        ASSERT_STREQ(str, "Melyik fajt szeretned valasztani?\n  1: elf\n  2: torpe\n  3: ember\nEzt a fajt valasztottad: elf\n");
    }

    TEST(Kiirt_ertek, 02) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        char str[150];
        IO("2", fajvalasztas(), str)
        ASSERT_STREQ(str, "Melyik fajt szeretned valasztani?\n  1: elf\n  2: torpe\n  3: ember\nEzt a fajt valasztottad: torpe\n");
    }

    TEST(Kiirt_ertek, 03) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        char str[150];
        IO("3", fajvalasztas(), str)
        ASSERT_STREQ(str, "Melyik fajt szeretned valasztani?\n  1: elf\n  2: torpe\n  3: ember\nEzt a fajt valasztottad: ember\n");
    }

    TEST(Kiirt_ertek, 04) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        char str[150];
        IO("4 2", fajvalasztas(), str)
        ASSERT_STREQ(str, "Melyik fajt szeretned valasztani?\n  1: elf\n  2: torpe\n  3: ember\nEzt a fajt valasztottad: torpe\n");
    }

    TEST(Kiirt_ertek, 05) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        char str[150];
        IO("-1 -3 0 5 4 4 7 13131121 -22 1", fajvalasztas(), str)
        ASSERT_STREQ(str, "Melyik fajt szeretned valasztani?\n  1: elf\n  2: torpe\n  3: ember\nEzt a fajt valasztottad: elf\n");
    }

    TEST(Visszateresi_ertek, 01) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        char str[150];
        IO("1", int res = fajvalasztas(), str)
        ASSERT_EQ(res, 1);
    }

    TEST(Visszateresi_ertek, 02) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        char str[150];
        IO("2", int res = fajvalasztas(), str)
        ASSERT_EQ(res, 2);
    }

    TEST(Visszateresi_ertek, 03) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        char str[150];
        IO("3", int res = fajvalasztas(), str)
        ASSERT_EQ(res, 3);
    }

    TEST(Visszateresi_ertek, 04) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        char str[150];
        IO("4 2", int res = fajvalasztas(), str)
        ASSERT_EQ(res, 2);
    }

    TEST(Visszateresi_ertek, 05) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        char str[150];
        IO("-1 -3 0 5 4 4 7 13131121 -22 1", int res = fajvalasztas(), str)
        ASSERT_EQ(res, 1);
    }
  learner_created: false
- name: src/karaktervalasztas.c
  visible: true
  placeholders:
  - offset: 549
    length: 25
    placeholder_text: // itt olvassuk be a fajt
    initial_state:
      length: 25
      offset: 179
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: |-
      int szam;
          do {
              scanf("%d", &szam);
          } while (szam < 1 || szam > 3);

          printf("Ezt a fajt valasztottad: %s\n", szam == 1 ? "elf" : szam == 2 ? "torpe" : "ember");
  - offset: 639
    length: 14
    placeholder_text: return 0;
    initial_state:
      length: 9
      offset: 243
    initialized_from_dependency: false
    selected: true
    status: Unchecked
    encrypted_possible_answer: return szam;
  text: |-
    #include <stdio.h>

    int fajvalasztas() {
        printf("Melyik fajt szeretned valasztani?\n");
        printf("  1: elf\n");
        printf("  2: torpe\n");
        printf("  3: ember\n");

        // itt olvassuk be a fajt

        // adjuk vissza a faj kódját
        return 0;
    }
  learner_created: false
status: Solved
feedback:
  message: Congratulations!
  time: "Tue, 03 Oct 2023 14:02:52 UTC"
record: -1
solution_hidden: true
