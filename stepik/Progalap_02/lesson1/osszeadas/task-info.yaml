type: edu
files:
- name: CMakeLists.txt
  visible: false
  text: |-
    cmake_minimum_required(VERSION 3.16)

    project(global-lesson1-osszeadas)

    set(CMAKE_CXX_STANDARD 14)

    # Files from `./src` directory
    set(SRC
            test/task.cpp)

    # Files from `./test` directory
    set(TEST
            test/test.cpp)


    # Running learner side code
    # Use PROJECT_NAME dependent names of targets for the plugin support to work correctly.
    add_executable(${PROJECT_NAME}-run ${SRC})

    # Running tests
    # Use PROJECT_NAME dependent names of targets for the plugin support to work correctly.
    configure_test_target(${PROJECT_NAME}-test ${SRC} ${TEST})
  learner_created: false
- name: test/task.cpp
  visible: false
  learner_created: false
- name: src/osszeadas.c
  visible: true
  placeholders:
  - offset: 0
    length: 196
    placeholder_text: "#include <stdio.h>\n\nint main() {\n    int darab;\n    scanf(\"\
      %d\", &darab);\n    \n    int osszeg = 0;\n    for (int i = 1; i <= darab; i++)\
      \ {\n        osszeg += i;\n    }\n    \n    printf(\"%d\", osszeg);\n    return\
      \ 0;\n}"
    initial_state:
      length: 210
      offset: 0
    initialized_from_dependency: false
    selected: true
    status: Unchecked
    encrypted_possible_answer: |-
      #include <stdio.h>

      int main() {
          int darab;
          scanf("%f", &darab);

          osszeg = 0;
          for (int i = 1, i <= darab; i++) {
              darab ++= i;
          }

          printf("%d", osszeg);
          return 0;
      }
  text: "#include <stdio.h>\n\nint main() {\n    int darab;\n    scanf(\"%d\", &darab);\n\
    \    \n    int osszeg = 0;\n    for (int i = 1; i <= darab; i++) {\n        osszeg\
    \ += i;\n    }\n    \n    printf(\"%d\", osszeg);\n    return 0;\n}"
  learner_created: false
- name: test/test.cpp
  visible: false
  text: |-
    #include <gtest/gtest.h>

    #include "../../tools.cpp"

    TEST(Teszt, 01) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        std::vector<string> errors {
            "error: lvalue required as left operand of assignment",
            "error: expected ';'",
            "error: 'osszeg' undeclared",
            "error: expected '=', ',', ';', 'asm' or '__attribute__'",
            "warning: format '%f' expects argument of type 'float *', but argument 2 has type 'int *'",
        };

        CHECK_COMPILER_ERROR_LIMIT("osszeadas", "osszeadas.c", errors, 3, 1)
    }
  learner_created: false
status: Solved
feedback:
  message: Congratulations!
  time: "Wed, 27 Sep 2023 18:12:20 UTC"
record: -1
solution_hidden: true
