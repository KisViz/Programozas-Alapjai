type: edu
files:
- name: CMakeLists.txt
  visible: false
  text: |-
    cmake_minimum_required(VERSION 3.16)

    project(global-lesson1-szamtani)

    set(CMAKE_CXX_STANDARD 14)

    # Files from `./src` directory
    set(SRC
            src/szamtani.c)

    # Files from `./test` directory
    set(TEST
            test/test.cpp)


    # Running learner side code
    # Use PROJECT_NAME dependent names of targets for the plugin support to work correctly.
    add_executable(${PROJECT_NAME}-run ${SRC})

    # Running tests
    # Use PROJECT_NAME dependent names of targets for the plugin support to work correctly.
    configure_test_target(${PROJECT_NAME}-test ${SRC} ${TEST})
  learner_created: false
- name: src/szamtani.c
  visible: true
  placeholders:
  - offset: 100
    length: 125
    placeholder_text: // megoldas
    initial_state:
      length: 11
      offset: 85
    initialized_from_dependency: false
    selected: true
    status: Unchecked
    encrypted_possible_answer: |-
      for (int i = 0; i < mennyiseg; i++) {
              printf("%d\n", kezdoelem + i * kulonbseg);
          }
  text: |-
    #include <stdio.h>

    void szamtani(int kezdoelem, int kulonbseg, int mennyiseg) {
        // megoldas
    }
  learner_created: false
- name: test/test.cpp
  visible: false
  text: |-
    #include <gtest/gtest.h>

    #define main main_0
    #include "../src/szamtani.c"
    #undef main

    #include "../../tools.cpp"

    void szamtani(int kezdoelem, int kulonbseg, int mennyiseg);

    TEST(Teszt, 01) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        char str[1000];
        IO("", szamtani(10, 2, 3), str);
        ASSERT_STREQ(str, "10\n12\n14\n");
    }

    TEST(Teszt, 02) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        char str[1000];
        IO("", szamtani(2, 2, 10), str);
        ASSERT_STREQ(str, "2\n4\n6\n8\n10\n12\n14\n16\n18\n20\n");
    }

    TEST(Teszt, 03) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        char str[1000];
        IO("", szamtani(5, 3, 1), str);
        ASSERT_STREQ(str, "5\n");
    }

    TEST(Teszt, 04) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        char str[1000];
        IO("", szamtani(10, -7, 3), str);
        ASSERT_STREQ(str, "10\n3\n-4\n");
    }

    TEST(Teszt, 05) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        char str[1000];
        IO("", szamtani(-3, 2, 5), str);
        ASSERT_STREQ(str, "-3\n-1\n1\n3\n5\n");
    }


    TEST(Teszt, 06) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        char str[1000];
        IO("", szamtani(53, 0, 35), str);
        ASSERT_STREQ(str, "53\n53\n53\n53\n53\n53\n53\n53\n53\n53\n53\n53\n53\n53\n53\n53\n53\n53\n53\n53\n53\n53\n53\n53\n53\n53\n53\n53\n53\n53\n53\n53\n53\n53\n53\n");
    }
  learner_created: false
status: Solved
feedback:
  message: Congratulations!
  time: "Mon, 23 Oct 2023 14:13:09 UTC"
record: -1
solution_hidden: true
