type: edu
files:
- name: CMakeLists.txt
  visible: false
  text: |-
    cmake_minimum_required(VERSION 3.20)

    project(global-lesson1-ackermann)

    set(CMAKE_CXX_STANDARD 14)

    # Files from `./src` directory
    set(SRC
            src/ackermann.c)

    # Files from `./test` directory
    set(TEST
            test/test.cpp)


    # Running learner side code
    # Use PROJECT_NAME dependent names of targets for the plugin support to work correctly.
    add_executable(${PROJECT_NAME}-run ${SRC})

    # Running tests
    # Use PROJECT_NAME dependent names of targets for the plugin support to work correctly.
    configure_test_target(${PROJECT_NAME}-test ${SRC} ${TEST})
  learner_created: false
- name: src/ackermann.c
  visible: true
  placeholders:
  - offset: 20
    length: 225
    placeholder_text: // megoldas
    initial_state:
      length: 11
      offset: 20
    initialized_from_dependency: false
    selected: true
    status: Unchecked
    encrypted_possible_answer: |-
      int ackermann(int m, int n) {
          if (m == 0) {
              return n+1;
          }

          if (n == 0) {
              return ackermann(m-1, 1);
          }

          return ackermann(m-1, ackermann(m, n-1));
      }
  text: |-
    #include <stdio.h>

    // megoldas
  learner_created: false
- name: test/test.cpp
  visible: false
  text: |-
    #include <gtest/gtest.h>
    #include <string>
    #include <cmath>

    using namespace std;

    #define main main_0
    #include "../src/ackermann.c"
    #undef main

    TEST(Teszt, 01) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        ASSERT_EQ(ackermann(0, 0), 1);
    }

    TEST(Teszt, 02) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        ASSERT_EQ(ackermann(1, 0), 2);
    }

    TEST(Teszt, 03) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        ASSERT_EQ(ackermann(2, 0), 3);
    }

    TEST(Teszt, 04) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        ASSERT_EQ(ackermann(3, 0), 5);
    }

    TEST(Teszt, 05) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        ASSERT_EQ(ackermann(4, 0), 13);
    }

    TEST(Teszt, 06) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        //ASSERT_EQ(ackermann(5, 0), 65533);
    }

    TEST(Teszt, 07) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        ASSERT_EQ(ackermann(1, 1), 3);
    }

    TEST(Teszt, 08) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        ASSERT_EQ(ackermann(1, 2), 4);
    }

    TEST(Teszt, 09) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        ASSERT_EQ(ackermann(1, 4), 6);
    }

    TEST(Teszt, 10) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        ASSERT_EQ(ackermann(2, 0), 3);
    }

    TEST(Teszt, 11) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        ASSERT_EQ(ackermann(3, 2), 29);
    }

    TEST(Teszt, 12) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        ASSERT_EQ(ackermann(3, 3), 61);
    }

    TEST(Teszt, 13) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        ASSERT_EQ(ackermann(1, 3), 5);
    }

    TEST(Teszt, 14) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        ASSERT_EQ(ackermann(2, 4), 11);
    }

    TEST(Teszt, 15) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        ASSERT_EQ(ackermann(3, 6), 509);
    }

    TEST(Teszt, 16) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        ASSERT_EQ(ackermann(2, 4040), 8083);
    }

    TEST(Teszt, 17) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        ASSERT_EQ(ackermann(1, 10000), 10002);
    }

    TEST(Teszt, 18) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        ASSERT_EQ(ackermann(0, 100000), 100001);
    }

    TEST(Teszt, 19) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        printf("HAHA LOL\n");
        // ASSERT_EQ(ackermann(2, 513512), 1027027);
    }

    TEST(Teszt, 20) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        printf("JAJA, NYILVAN\n");
        // ASSERT_EQ(ackermann(4, 2),  pow(2, 65536)-3 /* xd */);
    }
  learner_created: false
status: Solved
feedback:
  message: Congratulations!
  time: "Tue, 24 Oct 2023 10:30:44 UTC"
record: -1
solution_hidden: true
