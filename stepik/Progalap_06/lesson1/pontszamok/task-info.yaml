type: edu
files:
- name: CMakeLists.txt
  visible: false
  text: |-
    cmake_minimum_required(VERSION 3.20)

    project(global-lesson1-pontszamok)

    set(CMAKE_CXX_STANDARD 14)

    # Files from `./src` directory
    set(SRC
            src/pontszamok.c)

    # Files from `./test` directory
    set(TEST
            test/test.cpp)


    # Running learner side code
    # Use PROJECT_NAME dependent names of targets for the plugin support to work correctly.
    add_executable(${PROJECT_NAME}-run ${SRC})

    # Running tests
    # Use PROJECT_NAME dependent names of targets for the plugin support to work correctly.
    configure_test_target(${PROJECT_NAME}-test ${SRC} ${TEST})
  learner_created: false
- name: src/pontszamok.c
  visible: true
  placeholders:
  - offset: 68
    length: 102
    placeholder_text: // megoldas
    initial_state:
      length: 11
      offset: 68
    initialized_from_dependency: false
    selected: true
    status: Solved
    encrypted_possible_answer: |-
      FILE* file = fopen("pontszamok.bin", "wb");
          fwrite(eredmenyek, sizeof(int), darab, file);
          fclose(file);
  text: |-
    #include <stdio.h>

    void eltarol(int eredmenyek[], int darab) {
        // megoldas
    }
  learner_created: false
- name: test/test.cpp
  visible: false
  text: |-
    #include <gtest/gtest.h>

    #define main main_0
    #include "../src/pontszamok.c"
    #undef main

    #include "../../tools.cpp"

    TEST(Teszt, 01) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        int szamok[] = {7, 40, 104, 75, 0, 0, 20, 11, 20, 5};
        int szamol[] = {7, 40, 104, 75, 0, 0, 20, 11, 20, 5};
        int darab = 10;

        int res[darab];
        eltarol(szamok, darab);
        FILE* f = fopen("pontszamok.bin", "rb");
        fread(res, sizeof(int), darab, f);
        fclose(f);

        ASSERT_ARRAY_EQ(szamol, res, darab)
    }

    TEST(Teszt, 02) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        int szamok[] = {1, 1, 1, 1, 2, 2, 2, 2};
        int szamol[] = {1, 1, 1, 1, 2, 2, 2, 2};
        int darab = 8;

        int res[darab];
        eltarol(szamok, darab);
        FILE* f = fopen("pontszamok.bin", "rb");
        fread(res, sizeof(int), darab, f);
        fclose(f);

        ASSERT_ARRAY_EQ(szamol, res, darab)
    }

    TEST(Teszt, 03) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        int szamok[] = {1513};
        int szamol[] = {1513};
        int darab = 1;

        int res[darab];
        eltarol(szamok, darab);
        FILE* f = fopen("pontszamok.bin", "rb");
        fread(res, sizeof(int), darab, f);
        fclose(f);

        ASSERT_ARRAY_EQ(szamol, res, darab)
    }

    TEST(Teszt, 04) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        int darab = 10000;
        int szamok[darab];
        for (int i = 0; i < darab; i++) szamok[i] = i;

        int szamol[darab];
        for (int i = 0; i < darab; i++) szamol[i] = i;

        int res[darab];
        eltarol(szamok, darab);
        FILE* f = fopen("pontszamok.bin", "rb");
        fread(res, sizeof(int), darab, f);
        fclose(f);

        ASSERT_ARRAY_EQ(szamol, res, darab)
    }
  learner_created: false
status: Solved
feedback:
  message: Congratulations!
  time: "Sat, 28 Oct 2023 13:26:04 UTC"
record: -1
solution_hidden: true
