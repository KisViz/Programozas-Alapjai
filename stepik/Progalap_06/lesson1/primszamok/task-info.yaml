type: edu
files:
- name: CMakeLists.txt
  visible: false
  text: |-
    cmake_minimum_required(VERSION 3.16)

    project(global-lesson1-primszamok)

    set(CMAKE_CXX_STANDARD 14)

    # Files from `./src` directory
    set(SRC
            src/primszamok.c)

    # Files from `./test` directory
    set(TEST
            test/test.cpp)


    # Running learner side code
    # Use PROJECT_NAME dependent names of targets for the plugin support to work correctly.
    add_executable(${PROJECT_NAME}-run ${SRC})

    # Running tests
    # Use PROJECT_NAME dependent names of targets for the plugin support to work correctly.
    configure_test_target(${PROJECT_NAME}-test ${SRC} ${TEST})
  learner_created: false
- name: src/primszamok.c
  visible: true
  placeholders:
  - offset: 580
    length: 0
    placeholder_text: // return 0;
    initial_state:
      length: 12
      offset: 57
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: |
      int db = 0;

          if (veg < 2) {
              return 0;
          }

          if (kezdet < 3) {
              kezdet = 3;
              db = 1;
          }

          if (kezdet % 2 == 0) {
              kezdet++;
          }

          for (int i = kezdet; i <= veg; i+=2) {
              for (int j = 3; j <= sqrt(i); j+=2) {
                  if (i % j == 0) {
                      goto vege;
                  }
              }

              db++;

              vege: ;
          }

          return db;
  text: |-
    #include <math.h>

    int primek(int kezdet, int veg) {
        // return 0;}
  learner_created: false
- name: test/test.cpp
  visible: false
  text: |-
    #include <gtest/gtest.h>

    #define main main_0
    #include "../src/primszamok.c"
    #undef main

    #include "../../tools.cpp"

    TEST(Teszt, 01) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        CHECK_RUNNING_TIME(
            ASSERT_EQ(primek(3, 10), 3),
            5);
    }

    TEST(Teszt, 02) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        CHECK_RUNNING_TIME(
            ASSERT_EQ(primek(0, 10), 4),
            5);
    }

    TEST(Teszt, 03) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        CHECK_RUNNING_TIME(
            ASSERT_EQ(primek(0, 1), 0),
            5);
    }

    TEST(Teszt, 04) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        CHECK_RUNNING_TIME(
            ASSERT_EQ(primek(0, 2), 1),
            5);
    }

    TEST(Teszt, 05) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        CHECK_RUNNING_TIME(
            ASSERT_EQ(primek(31, 55), 6),
            5);
    }

    TEST(Teszt, 06) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        CHECK_RUNNING_TIME(
            ASSERT_EQ(primek(101, 211), 22),
            5);
    }

    TEST(Teszt, 07) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        CHECK_RUNNING_TIME(
            ASSERT_EQ(primek(552, 41241), 4217),
            5);
    }

    TEST(Teszt, 08) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        CHECK_RUNNING_TIME(
            ASSERT_EQ(primek(5122, 1500000), 113470),
            5);
    }

    TEST(Teszt, 09) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        CHECK_RUNNING_TIME(
            ASSERT_EQ(primek(10000000, 11500000), 92709),
            5);
    }

    TEST(Teszt, 10) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        CHECK_RUNNING_TIME(
            ASSERT_EQ(primek(500000000, 500300000), 14935),
            5);
    }
  learner_created: false
status: Solved
feedback:
  message: Congratulations!
  time: "Thu, 26 Oct 2023 12:16:30 UTC"
record: -1
solution_hidden: true
