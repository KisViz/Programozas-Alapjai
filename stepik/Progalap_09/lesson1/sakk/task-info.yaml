type: edu
files:
- name: CMakeLists.txt
  visible: false
  text: |-
    cmake_minimum_required(VERSION 3.16)

    project(global-lesson1-sakk)

    set(CMAKE_CXX_STANDARD 14)

    # Files from `./src` directory
    set(SRC
            src/sakk.c)

    # Files from `./test` directory
    set(TEST
            test/test.cpp)


    # Running learner side code
    # Use PROJECT_NAME dependent names of targets for the plugin support to work correctly.
    add_executable(${PROJECT_NAME}-run ${SRC})

    # Running tests
    # Use PROJECT_NAME dependent names of targets for the plugin support to work correctly.
    configure_test_target(${PROJECT_NAME}-test ${SRC} ${TEST})
  learner_created: false
- name: src/sakk.c
  visible: true
  placeholders:
  - offset: 105
    length: 11
    placeholder_text: // megoldas
    initial_state:
      length: 11
      offset: 105
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: |-
      unsigned int mezoHossz = meret / 8;

          FILE* f = fopen(fajlnev, "w");

          fprintf(f, "P2\n");
          fprintf(f, "%d %d\n", meret, meret);
          fprintf(f, "%d\n", szinekSzama);

          for (int i = 0; i < meret; i++) {
              for (int j = 0; j < meret; j++) {
                  unsigned int sor = (i / mezoHossz) % 2;
                  unsigned int oszlop = (j / mezoHossz) % 2;
                  fprintf(f, "%d ", ((sor + oszlop) % 2) == 0 ? szinekSzama : 0);
              }
          }

          fclose(f);
  text: |-
    #include <stdio.h>

    void rajzol(const char* fajlnev, unsigned int szinekSzama, unsigned int meret) {
        // megoldas
    }
  learner_created: false
- name: test/test.cpp
  visible: false
  text: |-
    #include <gtest/gtest.h>

    #define main main_0
    #include "../src/sakk.c"
    #undef main

    #include "../../tools.cpp"

    void doTest(const char* fajlnev, int szinek, int meret, int* elvart) {
        FILE* f = fopen(fajlnev, "r");

        char p, p2;
        int szinekk;
        int szelesseg;
        int magassag;
        fscanf(f, "%c%c%d%d%d", &p, &p2, &szelesseg, &magassag, &szinekk);
        ASSERT_EQ(p, 'P');
        ASSERT_EQ(p2, '2');
        ASSERT_EQ(szinekk, szinek);
        ASSERT_EQ(szelesseg, meret);
        ASSERT_EQ(magassag, meret);

        int eredmenyek[meret*meret];
        for (int i = 0; i < meret*meret; i++) {
            fscanf(f, "%d", &eredmenyek[i]);
        }

        ASSERT_ARRAY_EQ(eredmenyek, elvart, meret*meret)
    }

    TEST(Teszt, 01) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        int szinek = 1;
        int meret = 8;
        int elvart[] = {
                1, 0, 1, 0, 1, 0, 1, 0,
                0, 1, 0, 1, 0, 1, 0, 1,
                1, 0, 1, 0, 1, 0, 1, 0,
                0, 1, 0, 1, 0, 1, 0, 1,
                1, 0, 1, 0, 1, 0, 1, 0,
                0, 1, 0, 1, 0, 1, 0, 1,
                1, 0, 1, 0, 1, 0, 1, 0,
                0, 1, 0, 1, 0, 1, 0, 1
        };
        const char* fajlnev = "eredmeny.pgm";
        rajzol(fajlnev, szinek, meret);

        doTest(fajlnev, szinek, meret, elvart);
    }

    TEST(Teszt, 02) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        int szinek = 3;
        int meret = 16;
        int elvart[] = {
                3, 3, 0, 0, 3, 3, 0, 0, 3, 3, 0, 0, 3, 3, 0, 0,
                3, 3, 0, 0, 3, 3, 0, 0, 3, 3, 0, 0, 3, 3, 0, 0,
                0, 0, 3, 3, 0, 0, 3, 3, 0, 0, 3, 3, 0, 0, 3, 3,
                0, 0, 3, 3, 0, 0, 3, 3, 0, 0, 3, 3, 0, 0, 3, 3,
                3, 3, 0, 0, 3, 3, 0, 0, 3, 3, 0, 0, 3, 3, 0, 0,
                3, 3, 0, 0, 3, 3, 0, 0, 3, 3, 0, 0, 3, 3, 0, 0,
                0, 0, 3, 3, 0, 0, 3, 3, 0, 0, 3, 3, 0, 0, 3, 3,
                0, 0, 3, 3, 0, 0, 3, 3, 0, 0, 3, 3, 0, 0, 3, 3,
                3, 3, 0, 0, 3, 3, 0, 0, 3, 3, 0, 0, 3, 3, 0, 0,
                3, 3, 0, 0, 3, 3, 0, 0, 3, 3, 0, 0, 3, 3, 0, 0,
                0, 0, 3, 3, 0, 0, 3, 3, 0, 0, 3, 3, 0, 0, 3, 3,
                0, 0, 3, 3, 0, 0, 3, 3, 0, 0, 3, 3, 0, 0, 3, 3,
                3, 3, 0, 0, 3, 3, 0, 0, 3, 3, 0, 0, 3, 3, 0, 0,
                3, 3, 0, 0, 3, 3, 0, 0, 3, 3, 0, 0, 3, 3, 0, 0,
                0, 0, 3, 3, 0, 0, 3, 3, 0, 0, 3, 3, 0, 0, 3, 3,
                0, 0, 3, 3, 0, 0, 3, 3, 0, 0, 3, 3, 0, 0, 3, 3
        };
        const char* fajlnev = "eredmeny.pgm";
        rajzol(fajlnev, szinek, meret);

        doTest(fajlnev, szinek, meret, elvart);
    }

    TEST(Teszt, 03) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        int szinek = 1511;
        int meret = 32;
        int elvart[] = {
                1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0,
                1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0,
                1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0,
                1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0,
                0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511,
                0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511,
                0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511,
                0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511,
                1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0,
                1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0,
                1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0,
                1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0,
                0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511,
                0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511,
                0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511,
                0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511,
                1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0,
                1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0,
                1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0,
                1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0,
                0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511,
                0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511,
                0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511,
                0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511,
                1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0,
                1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0,
                1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0,
                1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0,
                0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511,
                0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511,
                0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511,
                0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 1511
        };
        const char* fajlnev = "cica.pgm";
        rajzol(fajlnev, szinek, meret);

        doTest(fajlnev, szinek, meret, elvart);
    }
  learner_created: false
status: Unchecked
record: -1
solution_hidden: true
