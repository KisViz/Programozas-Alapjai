type: edu
files:
- name: CMakeLists.txt
  visible: false
  text: |-
    cmake_minimum_required(VERSION 3.20)

    project(global-lesson1-keptipus)

    set(CMAKE_CXX_STANDARD 14)

    # Files from `./src` directory
    set(SRC
            src/keptipus.c)

    # Files from `./test` directory
    set(TEST
            test/test.cpp)


    # Running learner side code
    # Use PROJECT_NAME dependent names of targets for the plugin support to work correctly.
    add_executable(${PROJECT_NAME}-run ${SRC})

    # Running tests
    # Use PROJECT_NAME dependent names of targets for the plugin support to work correctly.
    configure_test_target(${PROJECT_NAME}-test ${SRC} ${TEST})
  learner_created: false
- name: src/keptipus.c
  visible: true
  placeholders:
  - offset: 173
    length: 11
    placeholder_text: // megoldas
    initial_state:
      length: 11
      offset: 173
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: |-
      char str[100];
          fscanf(f, "%[^\n]s", str);
          ok = strcmp("P2", str) == 0;
  text: |
    #include <stdio.h>
    #include <string.h>

    int pgm(const char* fajlnev) {
        int ok = 0;
        FILE* f = fopen(fajlnev, "r");

        if (f == NULL) {
            return 0;
        }

        // megoldas

        fclose(f);

        return ok;
    }
  learner_created: false
- name: test/test.cpp
  visible: false
  text: |
    #include <gtest/gtest.h>

    #define main main_0
    #include "../src/keptipus.c"
    #undef main

    #include "../../tools.cpp"

    TEST(Teszt, 01) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        char s[] = "P2\n3 3\n255\n0 0 0 0 0 0 0 0 0";
        writeContentToFile("elso.pgm", s);
        int res = pgm("elso.pgm");
        ASSERT_EQ(res, 1);
        remove("elso.pgm");
    }

    TEST(Teszt, 02) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        char s[] = "P2\n2 2\n1\n0 1 0 1";
        writeContentToFile("elso.pgm", s);
        int res = pgm("elso.pgm");
        ASSERT_EQ(res, 1);
        remove("elso.pgm");
    }

    TEST(Teszt, 03) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        char s[] = "P25\n3 3\n2\n0 1 2 0 1 2 0 2 1";
        writeContentToFile("elso.pgm", s);
        int res = pgm("elso.pgm");
        ASSERT_EQ(res, 0);
        remove("elso.pgm");
    }

    TEST(Teszt, 04) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        char s[] = "A B C D E\n3 3\n255\n0 0 0 0 0 0 0 0 0";
        writeContentToFile("asd.pgm", s);
        int res = pgm("asd.pgm");
        ASSERT_EQ(res, 0);
        remove("asd.pgm");
    }

    TEST(Teszt, 05) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        char s[] = "P2 P2\n3 3\n255\n0 0 0 0 0 0 0 0 0";
        writeContentToFile("cica.pgm", s);
        int res = pgm("cica.pgm");
        ASSERT_EQ(res, 0);
        remove("cica.pgm");
    }

    TEST(Teszt, 06) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        char s[] = "P2       P2      P2\n3 3\n255\n0 0 0 0 0 0 0 0 0";
        writeContentToFile("nemvirus.pgm", s);
        int res = pgm("nemvirus.pgm");
        ASSERT_EQ(res, 0);
        remove("nemvirus.pgm");
    }

    TEST(Teszt, 07) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        char s[] = "P2\n1 1\n10000\n10000";
        writeContentToFile("nemvirus.jar", s);
        int res = pgm("nemvirus.jar");
        ASSERT_EQ(res, 1);
        remove("nemvirus.jar");
    }
  learner_created: false
status: Unchecked
record: -1
solution_hidden: true
