type: edu
files:
- name: CMakeLists.txt
  visible: false
  text: |-
    cmake_minimum_required(VERSION 3.16)

    project(global-lesson1-hisztogram)

    set(CMAKE_CXX_STANDARD 14)

    # Files from `./src` directory
    set(SRC
            src/hisztogram.c)

    # Files from `./test` directory
    set(TEST
            test/test.cpp)


    # Running learner side code
    # Use PROJECT_NAME dependent names of targets for the plugin support to work correctly.
    add_executable(${PROJECT_NAME}-run ${SRC})

    # Running tests
    # Use PROJECT_NAME dependent names of targets for the plugin support to work correctly.
    configure_test_target(${PROJECT_NAME}-test ${SRC} ${TEST})
  learner_created: false
- name: macska.pgm
  visible: false
  learner_created: false
- name: vili.pgm
  visible: false
  learner_created: false
- name: src/hisztogram.c
  visible: true
  placeholders:
  - offset: 82
    length: 12
    placeholder_text: return NULL;
    initial_state:
      length: 12
      offset: 82
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: |-
      FILE* f = fopen(fajlnev, "r");
          fscanf(f, "%*c%*c");

          int oszlop;
          int sor;
          int szinek;
          fscanf(f, "%d %d %d", &oszlop, &sor, &szinek);

          int* gyakorisagok = (int*) malloc((szinek+1) * sizeof(int));
          for (int i = 0; i <= szinek; i++) {
              gyakorisagok[i] = 0;
          }

          for (int i = 0; i < sor; i++) {
              for (int j = 0; j < oszlop; j++) {
                  int ertek;
                  fscanf(f, "%d", &ertek);
                  gyakorisagok[ertek]++;
              }
          }

          fclose(f);
          return gyakorisagok;
  text: |-
    #include <stdio.h>
    #include <stdlib.h>

    int* histogram(const char* fajlnev) {
        return NULL;
    }
  learner_created: false
- name: test/test.cpp
  visible: false
  text: |-
    #include <gtest/gtest.h>

    #define main main_0
    #include "../src/hisztogram.c"
    #undef main

    #include "../../tools.cpp"

    TEST(Teszt, 01) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        int* ertekek = histogram("../../../lesson1/hisztogram/macska.pgm");
        int elvartak[] = {0, 0, 0, 0, 3, 15, 58, 147, 410, 567, 579, 587, 672, 760, 882, 965, 1140, 1208, 1273, 1365, 1415, 1361, 1461, 1512, 1624, 1658, 1700, 1604, 1708, 1720, 1790, 1757, 1724, 1731, 1800, 1882, 1869, 1833, 1810, 1878, 1878, 1851, 1914, 1923, 1992, 1919, 1918, 1936, 1940, 1851, 1902, 1995, 1904, 1887, 1891, 1822, 1933, 1807, 1830, 1825, 1913, 1853, 1863, 1734, 1786, 1808, 1827, 1863, 1808, 1893, 1928, 1865, 1797, 1798, 1745, 1821, 1761, 1804, 1707, 1734, 1768, 1649, 1686, 1707, 1741, 1659, 1604, 1605, 1720, 1702, 1657, 1671, 1672, 1687, 1733, 1707, 1713, 1641, 1756, 1763, 1711, 1744, 1769, 1697, 1688, 1812, 1715, 1844, 1748, 1766, 1732, 1825, 1822, 1845, 1789, 1823, 1776, 1849, 1835, 1838, 1803, 1835, 1833, 1766, 1720, 1821, 1782, 1791, 1877, 1754, 1810, 1837, 1861, 1842, 1931, 1842, 1940, 1944, 1944, 2056, 2022, 2008, 2088, 2023, 2116, 2269, 2151, 2349, 2382, 2509, 2516, 2447, 2635, 2726, 2800, 2936, 3129, 3432, 3486, 3476, 3577, 3578, 3710, 3777, 3694, 3473, 3512, 3863, 4213, 4115, 4416, 4527, 4492, 4523, 4776, 4762, 4976, 5786, 6053, 6152, 6613, 7368, 7720, 8289, 9110, 9317, 9634, 9955, 10805, 11650, 12833, 13067, 13755, 12179, 9599, 7364, 7744, 9858, 10433, 10360, 9673, 8377, 8853, 10011, 10505, 10858, 8625, 9413, 10566, 8646, 8602, 6941, 3852, 2352, 2253, 2234, 2187, 2056, 2029, 2253, 1996, 1946, 1980, 1806, 1688, 1774, 1800, 1936, 2109, 2028, 1862, 1758, 1773, 1705, 1554, 1347, 1305, 1291, 1357, 1366, 1238, 1096, 1275, 1401, 1440, 1260, 1314, 1421, 1678, 2081, 3473, 4357, 19, 0, 0, 0};
        ASSERT_ARRAY_EQ(ertekek, elvartak, 256);
        free(ertekek);
    }

    TEST(Teszt, 02) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        int* ertekek = histogram("../../../lesson1/hisztogram/vili.pgm");
        int elvartak[] = {92, 235, 147, 144, 134, 116, 143, 158, 224, 226, 277, 339, 419, 494, 635, 684, 775, 859, 881, 958, 868, 894, 876, 937, 950, 1042, 1054, 1111, 1134, 1172, 1246, 1198, 1325, 1317, 1366, 1390, 1505, 1503, 1514, 1548, 1593, 1550, 1563, 1656, 1722, 1741, 1747, 1763, 1781, 1717, 1768, 1803, 1806, 1876, 1801, 1813, 1752, 1799, 1777, 1778, 1790, 1763, 1846, 1744, 1814, 1798, 1911, 1861, 1857, 1888, 1982, 2028, 2126, 2099, 2145, 2102, 2294, 2467, 2490, 2585, 2629, 2629, 2568, 2573, 2596, 2718, 2620, 2677, 2716, 2791, 2741, 2634, 2701, 2668, 2647, 2617, 2599, 2595, 2638, 2583, 2560, 2527, 2459, 2480, 2418, 2388, 2300, 2302, 2225, 2226, 2240, 2222, 2204, 2163, 2072, 2010, 2085, 2026, 1990, 1973, 1924, 1962, 1902, 1917, 1878, 1903, 1887, 1891, 1889, 1779, 1842, 1879, 1855, 1871, 1902, 1943, 2030, 2066, 2031, 2059, 1973, 2134, 2035, 2096, 2171, 2146, 2203, 2226, 2193, 2400, 2359, 2387, 2576, 2599, 2566, 2706, 2689, 2769, 3058, 3426, 3804, 3485, 3350, 3485, 3114, 2486, 2404, 2396, 2429, 2479, 2519, 2518, 2534, 2578, 2792, 2795, 3027, 3010, 3194, 3312, 3376, 3262, 3413, 3218, 3436, 3456, 3366, 3439, 3579, 3742, 3634, 4003, 4018, 3931, 3980, 3964, 4153, 4344, 4775, 4314, 4664, 4346, 3858, 3957, 3728, 3912, 3702, 4099, 3886, 4225, 4792, 5563, 4826, 4302, 3711, 3741, 3823, 4090, 4481, 5333, 5582, 4746, 4257, 4106, 4446, 4865, 5478, 4906, 4483, 5068, 5572, 6080, 6500, 6486, 5537, 3899, 3047, 2615, 1919, 1797, 1549, 1683, 1610, 1347, 770, 382, 355, 323, 334, 351, 326, 374, 435, 778, 940, 123};
        ASSERT_ARRAY_EQ(ertekek, elvartak, 256);
        free(ertekek);
    }
  learner_created: false
status: Unchecked
record: -1
solution_hidden: true
