type: edu
files:
- name: CMakeLists.txt
  visible: false
  text: |-
    cmake_minimum_required(VERSION 3.16)

    project(global-lesson1-nagyitas)

    set(CMAKE_CXX_STANDARD 14)

    # Files from `./src` directory
    set(SRC
            src/nagyito.c)

    # Files from `./test` directory
    set(TEST
            test/test.cpp)


    # Running learner side code
    # Use PROJECT_NAME dependent names of targets for the plugin support to work correctly.
    add_executable(${PROJECT_NAME}-run ${SRC})

    # Running tests
    # Use PROJECT_NAME dependent names of targets for the plugin support to work correctly.
    configure_test_target(${PROJECT_NAME}-test ${SRC} ${TEST})
  learner_created: false
- name: src/nagyito.c
  visible: true
  placeholders:
  - offset: 0
    length: 11
    placeholder_text: // megoldas
    initial_state:
      length: 11
      offset: 0
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: |-
      #include <string.h>

      int atvalt(char betu) {
          if (betu >= '0' && betu <= '9') {
              return betu - '0';
          }

          return betu - 'A' + 10;
      }

      const char* nagyobb(const char* a, const char* b) {
          if (strlen(a) > strlen(b)) {
              return a;
          } else if (strlen(b) > strlen(a)) {
              return b;
          }

          for (int i = 0; i < strlen(a); i++) {
              int ertekA = atvalt(a[i]);
              int ertekB = atvalt(b[i]);
              if (ertekA > ertekB) {
                  return a;
              } else if (ertekB > ertekA) {
                  return b;
              }
          }

          return NULL;
      }
  text: // megoldas
  learner_created: false
- name: test/test.cpp
  visible: false
  text: |-
    #include <gtest/gtest.h>

    #define main main_0
    #include "../src/nagyito.c"
    #undef main

    TEST(Teszt, 01) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        const char* a1 = "CACA";
        const char* a2 = "CAC7";
        const char* helyes = a1;
        ASSERT_EQ(nagyobb(a1, a2), helyes);
    }

    TEST(Teszt, 02) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        const char* a1 = "888";
        const char* a2 = "634";
        const char* helyes = a1;
        ASSERT_EQ(nagyobb(a1, a2), helyes);
    }

    TEST(Teszt, 03) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        const char* a1 = "47";
        const char* a2 = "101";
        const char* helyes = a2;
        ASSERT_EQ(nagyobb(a1, a2), helyes);
    }

    TEST(Teszt, 04) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        const char* a1 = "140";
        const char* a2 = "140";
        const char* helyes = NULL;
        ASSERT_EQ(nagyobb(a1, a2), helyes);
    }

    TEST(Teszt, 05) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        const char* a1 = "BBB";
        const char* a2 = "BB";
        const char* helyes = a1;
        ASSERT_EQ(nagyobb(a1, a2), helyes);
    }

    TEST(Teszt, 06) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        const char* a1 = "ABCD";
        const char* a2 = "ABCDE";
        const char* helyes = a2;
        ASSERT_EQ(nagyobb(a1, a2), helyes);
    }

    TEST(Teszt, 07) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        const char* a1 = "FAFAFA";
        const char* a2 = "FAFA95";
        const char* helyes = a1;
        ASSERT_EQ(nagyobb(a1, a2), helyes);
    }

    TEST(Teszt, 08) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        const char* a1 = "159E328";
        const char* a2 = "1599328";
        const char* helyes = a1;
        ASSERT_EQ(nagyobb(a1, a2), helyes);
    }
  learner_created: false
status: Unchecked
record: -1
solution_hidden: true
