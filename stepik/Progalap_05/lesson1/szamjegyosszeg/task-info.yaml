type: edu
files:
- name: CMakeLists.txt
  visible: false
  text: |-
    cmake_minimum_required(VERSION 3.16)

    project(global-lesson1-szamjegyosszeg)

    set(CMAKE_CXX_STANDARD 14)

    # Files from `./src` directory
    set(SRC
            test/task.cpp)

    # Files from `./test` directory
    set(TEST
            test/test.cpp)


    # Running learner side code
    # Use PROJECT_NAME dependent names of targets for the plugin support to work correctly.
    add_executable(${PROJECT_NAME}-run ${SRC})

    # Running tests
    # Use PROJECT_NAME dependent names of targets for the plugin support to work correctly.
    configure_test_target(${PROJECT_NAME}-test ${SRC} ${TEST})
  learner_created: false
- name: test/task.cpp
  visible: false
  learner_created: false
- name: src/szamjegyosszeg.c
  visible: true
  placeholders:
  - offset: 0
    length: 144
    placeholder_text: |-
      int szamjegyosszeg(int szam) {
          int osszeg = 0;
          while (szam > 0) {
              osszeg += szam % 10;
              szam /= 10;
          }
          return osszeg;
      }
    initial_state:
      length: 149
      offset: 0
    initialized_from_dependency: false
    selected: true
    status: Unchecked
    encrypted_possible_answer: |-
      int szamjegyosszeg(int szam) {
          osszeg = 0;
          while (szam > 0) {
              osszeg += szam % 10
              szam /= 10;
          }
      }
  text: |-
    int szamjegyosszeg(int szam) {
        int osszeg = 0;
        while (szam > 0) {
            osszeg += szam % 10;
            szam /= 10;
        }
        return osszeg;
    }
  learner_created: false
- name: test/test.cpp
  visible: false
  text: |-
    #include <gtest/gtest.h>

    #include "../../tools.cpp"

    TEST(Teszt, 01) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        std::vector<string> errors {
            "error: 'osszeg' undeclared (first use in this function)",
            "error: expected ';' before 'szam'",
            "warning: control reaches end of non-void function"
        };

        CHECK_COMPILER_ERROR("szamjegyosszeg", "szamjegyosszeg.c", errors, 1);
    }
  learner_created: false
status: Solved
record: -1
solution_hidden: true
