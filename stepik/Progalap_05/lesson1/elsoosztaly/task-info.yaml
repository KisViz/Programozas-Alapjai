type: edu
files:
- name: CMakeLists.txt
  visible: false
  text: |-
    cmake_minimum_required(VERSION 3.16)

    project(global-lesson1-elsoosztaly)

    set(CMAKE_CXX_STANDARD 14)

    # Files from `./src` directory
    set(SRC
            test/task.cpp)

    # Files from `./test` directory
    set(TEST
            test/test.cpp)


    # Running learner side code
    # Use PROJECT_NAME dependent names of targets for the plugin support to work correctly.
    add_executable(${PROJECT_NAME}-run ${SRC})

    # Running tests
    # Use PROJECT_NAME dependent names of targets for the plugin support to work correctly.
    configure_test_target(${PROJECT_NAME}-test ${SRC} ${TEST})
  learner_created: false
- name: test/task.cpp
  visible: false
  learner_created: false
- name: test/test.cpp
  visible: false
  text: |-
    #include <gtest/gtest.h>

    #include "../../tools.cpp"

    TEST(Teszt, 01) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        std::vector<string> errors {
            "warning: extra tokens at end of #include directive",
            "warning: return type of 'main' is not 'int'",
            "warning: format '%d' expects argument of type 'int *', but argument 2 has type 'int'",
            "warning: too many arguments for format",
            "warning: control reaches end of non-void function",
            "error: 'Meddig' undeclared",
            "error: expected ')'",
            "error: stray '\\' in program",
            "error: 'i' undeclared",
            "error: incompatible types when returning type 'char *' but 'double' was expected",
            "error: expected expression before '%' token",
            "error: expected declaration or statement at end of input"
        };

        CHECK_COMPILER_ERROR_LIMIT("elsoosztaly", "elsoosztaly.c", errors, 11, 1)
    }
  learner_created: false
- name: src/elsoosztaly.c
  visible: true
  placeholders:
  - offset: 0
    length: 235
    placeholder_text: |-
      #include <stdio.h>

      int main() {
          printf("Meddig szamoljak?\n");

          int db;
          scanf("%d", &db);

          printf("Szamolas %d-ig: \n", db);

          for (int i = 1; i <= db; i++) {
              printf("%d ", i);
          }

          return 0;
      }
    initial_state:
      length: 227
      offset: 0
    initialized_from_dependency: false
    selected: true
    status: Unchecked
    encrypted_possible_answer: |-
      #include <stdio.h>!

      double main() {
          printf(Meddig szamoljak?\n);

          int db;
          scanf("%d", db);

          printf("Szamolas %d-ig: \n", db, db);

          for (i = 1; i <= db;) {
              printf("%d ", i);
          }

          return "macska";
      %
  text: |-
    #include <stdio.h>

    int main() {
        printf("Meddig szamoljak?\n");

        int db;
        scanf("%d", &db);

        printf("Szamolas %d-ig: \n", db);

        for (int i = 1; i <= db; i++) {
            printf("%d ", i);
        }

        return 0;
    }
  learner_created: false
status: Solved
feedback:
  message: Congratulations!
  time: "Thu, 26 Oct 2023 07:52:30 UTC"
record: -1
solution_hidden: true
