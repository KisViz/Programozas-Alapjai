type: edu
files:
- name: CMakeLists.txt
  visible: false
  text: |-
    cmake_minimum_required(VERSION 3.16)

    project(global-lesson1-napok)

    set(CMAKE_CXX_STANDARD 14)

    # Files from `./src` directory
    set(SRC
            src/napok.c)

    # Files from `./test` directory
    set(TEST
            test/test.cpp)


    # Running learner side code
    # Use PROJECT_NAME dependent names of targets for the plugin support to work correctly.
    add_executable(${PROJECT_NAME}-run ${SRC})

    # Running tests
    # Use PROJECT_NAME dependent names of targets for the plugin support to work correctly.
    configure_test_target(${PROJECT_NAME}-test ${SRC} ${TEST})
  learner_created: false
- name: src/napok.c
  visible: true
  placeholders:
  - offset: 0
    length: 491
    placeholder_text: |-
      #include <string.h>

      int hetnapja(char str) (
          int nap = 0;
          if (!strcmp(str, str)) {
              nap = 1;
          } else if (!strcmp(str, "kedd")) {
              nap = 2;
          } else if (!strcmp(str, "szerda")) {
              nap = 3;
          } else if (!strcmp(str, "pentek")) {
              nap = 5;
          } else if (!strcmp(str, "csutortok")) {
              nap = 4;
          } else if (!strcmp(str, "szombat")) {
              nap = 6;
          } else if (!strcmp(str, "vasarnap")) {
              nap = 7;
          }

          return nap;
      )
    initial_state:
      length: 485
      offset: 0
    initialized_from_dependency: false
    selected: true
    status: Unchecked
    encrypted_possible_answer: |-
      #include <string.h>

      int hetnapja(char str[]) {
          int nap = 0;
          if (!strcmp(str, "hetfo")) {
              nap = 1;
          } else if (!strcmp(str, "kedd")) {
              nap = 2;
          } else if (!strcmp(str, "szerda")) {
              nap = 3;
          } else if (!strcmp(str, "pentek")) {
              nap = 5;
          } else if (!strcmp(str, "csutortok")) {
              nap = 4;
          } else if (!strcmp(str, "szombat")) {
              nap = 6;
          } else if (!strcmp(str, "vasarnap")) {
              nap = 7;
          }

          return nap;
      }
  text: |-
    #include <string.h>

    int hetnapja(char str) (
        int nap = 0;
        if (!strcmp(str, str)) {
            nap = 1;
        } else if (!strcmp(str, "kedd")) {
            nap = 2;
        } else if (!strcmp(str, "szerda")) {
            nap = 3;
        } else if (!strcmp(str, "pentek")) {
            nap = 5;
        } else if (!strcmp(str, "csutortok")) {
            nap = 4;
        } else if (!strcmp(str, "szombat")) {
            nap = 6;
        } else if (!strcmp(str, "vasarnap")) {
            nap = 7;
        }

        return nap;
    )
  learner_created: false
- name: test/test.cpp
  visible: false
  text: |-
    #include <gtest/gtest.h>

    #define main main_0
    #include "../src/napok.c"
    #undef main

    char str1[] = "hetfo";
    char str2[] = "kedd";
    char str3[] = "szerda";
    char str4[] = "csutortok";
    char str5[] = "pentek";
    char str6[] = "szombat";
    char str7[] = "vasarnap";
    char str8[] = "julius";

    TEST(Teszt, 01) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        ASSERT_EQ(hetnapja(str1), 1);
    }

    TEST(Teszt, 02) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        ASSERT_EQ(hetnapja(str6), 6);
    }

    TEST(Teszt, 03) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        ASSERT_EQ(hetnapja(str2), 2);
    }

    TEST(Teszt, 04) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        ASSERT_EQ(hetnapja(str5), 5);
    }

    TEST(Teszt, 05) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        ASSERT_EQ(hetnapja(str8), 0);
    }

    TEST(Teszt, 06) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        ASSERT_EQ(hetnapja(str3), 3);
    }

    TEST(Teszt, 07) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        ASSERT_EQ(hetnapja(str4), 4);
    }

    TEST(Teszt, 08) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        ASSERT_EQ(hetnapja(str7), 7);
    }
  learner_created: false
status: Solved
record: -1
solution_hidden: true
