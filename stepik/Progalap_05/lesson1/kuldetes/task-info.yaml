type: edu
files:
- name: CMakeLists.txt
  visible: false
  text: |-
    cmake_minimum_required(VERSION 3.16)

    project(global-lesson1-kuldetes)

    set(CMAKE_CXX_STANDARD 14)

    # Files from `./src` directory
    set(SRC
            test/task.cpp)

    # Files from `./test` directory
    set(TEST
            test/test.cpp)


    # Running learner side code
    # Use PROJECT_NAME dependent names of targets for the plugin support to work correctly.
    add_executable(${PROJECT_NAME}-run ${SRC})

    # Running tests
    # Use PROJECT_NAME dependent names of targets for the plugin support to work correctly.
    configure_test_target(${PROJECT_NAME}-test ${SRC} ${TEST})
  learner_created: false
- name: test/test.cpp
  visible: false
  text: |-
    #include <gtest/gtest.h>

    #include "../../tools.cpp"

    TEST(Teszt, 01) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        std::vector<string> errors {
            "warning: return type defaults to 'int'",
            "warning: control reaches end of non-void function",
            "error: assignment to expression with array type",
            "error: incompatible types when returning type 'Kuldetes'"
        };

        CHECK_COMPILER_ERROR("kuldetes", "kuldetes.c", errors, 1);
    }
  learner_created: false
- name: test/task.cpp
  visible: false
  learner_created: false
- name: src/kuldetes.c
  visible: true
  placeholders:
  - offset: 0
    length: 142
    placeholder_text: |-
      #include <string.h>
      #include <stdio.h>

      typedef struct {
          int nehezseg;
          char szoveg[1000];
          double jutalom;
      } Kuldetes;

      Kuldetes kuldetestLetrehoz(int nehezseg, char szoveg[], double jutalom) {
          Kuldetes k;
          k.nehezseg = nehezseg;
          strcpy(k.szoveg, szoveg);
          k.jutalom = jutalom;
          return k;
      }

      void toString(Kuldetes k, char szoveg[]) {
          sprintf(szoveg, "%s (nehezseg: %d), jutalom: %lf", k.szoveg, k.nehezseg, k.jutalom);
      }
    initial_state:
      length: 453
      offset: 0
    initialized_from_dependency: false
    selected: true
    status: Failed
    encrypted_possible_answer: |-
      #include <string.h>
      #include <stdio.h>

      typedef struct {
          int nehzseg;
          char szoveg[1000];
          double jutalom;
      } Kuldetes;

      kuldetestLetrehoz(int nehezseg, char szoveg[], double jutalom) {
          Kuldetes k;
          k.nehezseg = nehezseg;
          k.szoveg = szoveg;
          k.jutalom = jutalom;
          return k;
      }

      void toString(Kuldetes k, char szoveg[]) {
          sprintf(szoveg, "%s (nehezseg: %i), jutalom: %d", k.szoveg, k.nehezseg, k.jutalom);
      }
  text: |-
    #include <string.h>
    #include <stdio.h>

    typedef struct {
        int nehezseg;
        char szoveg[1000];
        double jutalom;
    } Kuldetes;

    Kuldetes kuldetestLetrehoz(int nehezseg, char szoveg[], double jutalom) {
        Kuldetes k;
        k.nehezseg = nehezseg;
        strcpy(k.szoveg, szoveg);
        k.jutalom = jutalom;
        return k;
    }

    void toString(Kuldetes k, char szoveg[]) {
        sprintf(szoveg, "%s (nehezseg: %d), jutalom: %lf", k.szoveg, k.nehezseg, k.jutalom);
    }
  learner_created: false
status: Failed
feedback:
  message: Incorrect
  time: "Sat, 28 Oct 2023 15:56:08 UTC"
record: -1
solution_hidden: true
