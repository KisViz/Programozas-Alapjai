type: edu
files:
- name: CMakeLists.txt
  visible: false
  text: |-
    cmake_minimum_required(VERSION 3.20)

    project(global-lesson1-atallit)

    set(CMAKE_CXX_STANDARD 14)

    # Files from `./src` directory
    set(SRC
            src/atallit.c)

    # Files from `./test` directory
    set(TEST
            test/test.cpp)


    # Running learner side code
    # Use PROJECT_NAME dependent names of targets for the plugin support to work correctly.
    add_executable(${PROJECT_NAME}-run ${SRC})

    # Running tests
    # Use PROJECT_NAME dependent names of targets for the plugin support to work correctly.
    configure_test_target(${PROJECT_NAME}-test ${SRC} ${TEST})
  learner_created: false
- name: src/atallit.c
  visible: true
  placeholders:
  - offset: 53
    length: 151
    placeholder_text: // megoldas
    initial_state:
      length: 11
      offset: 53
    initialized_from_dependency: false
    selected: true
    status: Unchecked
    encrypted_possible_answer: |-
      int oraatallitas(int elso, int masodik) {
          if (elso > masodik) {
              atallit(&elso);
              return elso;
          } else {
              atallit(&masodik);
              return masodik;
          }
      }
  text: |-
    void atallit(int* szam) {
        *szam*=*szam%2?2:1;
    }

    // megoldas
  learner_created: false
- name: test/test.cpp
  visible: false
  text: |-
    #include <gtest/gtest.h>
    #include <string>

    using namespace std;

    #define main main_0
    #include "../src/atallit.c"
    #undef main

    TEST(atallit, 01) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        int a;
        a = 30;
        atallit(&a);
        ASSERT_EQ(a, 30);

        a = 48;
        atallit(&a);
        ASSERT_EQ(a, 48);

        a = 21;
        atallit(&a);
        ASSERT_EQ(a, 42);

        a = 73;
        atallit(&a);
        ASSERT_EQ(a, 146);
    }

    TEST(oraatallitas, 01) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        ASSERT_EQ(oraatallitas(20, 33), 66);
    }

    TEST(oraatallitas, 02) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        ASSERT_EQ(oraatallitas(42, 33), 42);
    }

    TEST(oraatallitas, 03) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        ASSERT_EQ(oraatallitas(120, 33), 120);
    }

    TEST(oraatallitas, 04) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        ASSERT_EQ(oraatallitas(120, 119), 120);
    }

    TEST(oraatallitas, 05) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        ASSERT_EQ(oraatallitas(120, 121), 242);
    }

    TEST(oraatallitas, 06) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        ASSERT_EQ(oraatallitas(13, 13), 26);
    }
  learner_created: false
status: Solved
feedback:
  message: Congratulations!
  time: "Fri, 17 Nov 2023 16:29:16 UTC"
record: -1
solution_hidden: true
